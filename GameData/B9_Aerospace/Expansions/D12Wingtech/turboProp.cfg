PART
{
name = D12turboProp
module = Part
author = PolecatEZ, Taverius-Bac9 (textures)

// --- asset parameters ---
MODEL
  {
	model = B9_Aerospace/Expansions/D12Wingtech/turboProp
	scale = 1, 1, 1
	location = 0, 0, 0
	rotation = 0, 0, 0
texture = JetPodMedium	, B9_Aerospace/Parts/Engine_Jet_Pod_Medium/model_jet_pod_medium
texture = HW21wing , B9_Aerospace/Parts/Aero_Wing_HW21/model000
  }

scale = 1.0
rescaleFactor = 1.0

// --- node definitions ---
node_stack_top = 0.0, -0.738, 0.0, 0.0, 1.0, 0.0, 1

// --- FX definitions ---

//fx_exhaustLight_yellow = 0.0, -0.1, 0.0, 0.0, 0.0, 1.0, power
//fx_smokeTrail_light  = 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, power
fx_exhaustSparks_flameout = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, flameout

// --- Sound FX definition ---

//sound_fspropstart.wav = engage
//sound_fspropidle.wav = power
//sound_jet_deep = running
//sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
TechRequired = aerodynamicSystems
cost = 950
category = Propulsion
subcategory = 0
title = D12 Multi-Purpose TurboProp Engine
manufacturer = Dirty Rat Recycling Yards
description = This multi-purpose engine serves many purposes, says the Kerbal Department of Redunancy Department.  Switch between power modes and mesh types at your leisure.  Electric mode requires no oxygen but produces less power. Turbo mode consumes fuel like whiskey at an Irish wake but allows you to go higher and faster.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,0,0

// --- standard part parameters ---
mass = 0.75
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 7
maxTemp = 3600

MODULE
{
	name = FSengineSounds
	engage = Firespitter/Sounds/sound_fspropstart
	//running =
	power = Firespitter/Sounds/sound_fspropidle
	//disengage =
	//flameout =
	//warning = Firespitter/Sounds/sound_fsheatDing
	powerPitchBase = 1.0
	thrustAddedToPitch = 0.5
	powerFadeInSpeed = 0.005
	powerFadeInDelay = 0.5
	powerLowerThreshold = 0.0
	powerVolume = 1.0
	engageVolume = 1.0
	warningSoundThreshold = 0.8
	warningCooldownTime = 2.0
	randomStartDelay = 1.0 //for playing engines slightly out of sync
}

MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = False
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 105
	heatProduction = 300
	useEngineResponseTime = True
	engineAccelerationSpeed = 5.0
	engineDecelerationSpeed = 5.0
	useVelocityCurve = True
	PROPELLANT
	{
		name = LiquidFuel
		ratio = 1
		DrawGauge = True
	}
	PROPELLANT
	{
		name = IntakeAir
		ratio = 15
	}
    atmosphereCurve
    {
        key = 0 500
        key = 0.45 1200
        key = 1 2000
    }
    velocityCurve
    {
        key = 500 0 0 0
        key = 425 0.2 0 0
        key = 0 1 0 0
    }
	
}

MODULE
{
	name = FSpropellerAtmosphericNerf
	thrustModifier = 1.2
}

MODULE
{
	name = ModuleAlternator	
	RESOURCE
	{
		name = ElectricCharge
		rate = 1.0
	}
}

MODULE
{
  name = ModuleResourceIntake
  resourceName = IntakeAir
  checkForOxygen = true
  area = 0.03
  intakeSpeed = 50
  intakeTransformName = thrustTransform //Intake  
}

RESOURCE
{
    name = IntakeAir
    amount = 0
    maxAmount = 15.0
}


MODULE
{
	name = FSplanePropellerSpinner
	propellerName = propBase
	rotationSpeed = -140
	windmillRPM = 0.2
	spinUpTime = 10.0
	useRotorDiscSwap = 0
}

MODULE
{
	name = FSswitchEngineThrustTransform
	defaultTTName = thrustTransform
	alternateTTName = alternateThrustTransform
	useNamedAlternate = 0
}

MODULE
{
	name = FSengineHandCrank
}

MODULE
  {
	name = FSmeshSwitch
	buttonName = Next Cowling Shape
	objects = engine1;engine2;engine3;engine4
	channel = 0 // not implemented yet
	isController = true // not implemented yet
  }

MODULE
  {
	name = FSmeshSwitch
	buttonName = Next Nose Cone
	objects = cone1;cone2;cone3
	channel = 0 // not implemented yet
	isController = true // not implemented yet
  }

MODULE
  {
	name = FSmeshSwitch
	buttonName = Next Propeller Style
	objects = prop1;prop2;prop3;prop4
	channel = 0 // not implemented yet
	isController = true // not implemented yet
  }
// PART END
}